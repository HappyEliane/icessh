<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  backgroundColor="#FDFEFE" width="658" height="526" creationComplete="initData()">
	
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			public var userid:String="";//用户ID
			private var DGArray3:Array = [];
			public var initDG3:ArrayCollection;
			public var ziyuan:ArrayCollection = new ArrayCollection();
			public var ff:ArrayCollection = new ArrayCollection();
			public var dd:ArrayCollection= new ArrayCollection();
			public var gridpara:DataGrid;
			var txt:Text = new Text();
			var nPage:LinkBar = new LinkBar();
			var pPage:LinkBar = new LinkBar();
			var fPage:LinkBar = new LinkBar();
			var lPage:LinkBar = new LinkBar();
			var goto:LinkBar = new LinkBar();
			var hbo:HBox = new HBox();
			var inputpage:NumericStepper = new NumericStepper();
			public var mainApp:CompReg = null;
			
			public var login_userid="";
			public var home:String="";
			public var provider:String="";
			public var business:String="";
			public var center:String="";
			public function initData():void {
				/*
				initDG3=new ArrayCollection(DGArray3);
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/userole/QueryUserServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.id="3";
				param.cloud="";
				param.date="null,null,null";
				param.kind=userid;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Query_successhandler);		
				*/
				
				//	var results:Array = comporg.split(',');
				//for each(var object:Object in results)
				//	{
				//		var re:String=object.toString();
				//		Alert.show(re);
				if(center=="1")
				{
					if(org1.text=="")
					{
						org1.text="服务中心";
						del1.enabled=true;
						
					}
					else if(org2.text=="")
					{
						org2.text="服务中心";
						del2.enabled=true;
						
					}
					else if(org3.text=="")
					{
						org3.text="服务中心";
						del3.enabled=true;
					}
					else if(org4.text=="")
					{
						org4.text="服务中心";
						del4.enabled=true;
					}
				}
				if(provider=="1")
				{
					if(org1.text=="")
					{
						org1.text="供应商用户";
						del1.enabled=true;
					}
					else if(org2.text=="")
					{
						org2.text="供应商用户";
						del2.enabled=true;
					}
					else if(org3.text=="")
					{
						org3.text="供应商用户";
						del3.enabled=true;
					}
					else if(org4.text=="")
					{
						org4.text="供应商用户";
						del4.enabled=true;
					}
				}
				if(business=="1")
				{
					if(org1.text=="")
					{
						org1.text="业务中心";
						del1.enabled=true;
					}
					else if(org2.text=="")
					{
						org2.text="业务中心";
						del2.enabled=true;
					}
					else if(org3.text=="")
					{
						org3.text="业务中心";
						del3.enabled=true;
					}
					else if(org4.text=="")
					{
						org4.text="业务中心";
						del4.enabled=true;
					}
				}
				if(home=="1")
				{
					if(org1.text=="")
					{
						org1.text="家庭用户";
						del1.enabled=true;
					}
					else if(org2.text=="")
					{
						org2.text="家庭用户";
						del2.enabled=true;
					}
					else if(org3.text=="")
					{
						org3.text="家庭用户";
						del3.enabled=true;
					}
					else if(org4.text=="")
					{
						org4.text="家庭用户";
						del4.enabled=true;
					}
					
				}
			}
			
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object;       //JSON:2
			
			private var cuserid:String="";
			private var cusername:String="";
			private var cpassword:String="";
			private var cmakeperson:String="";
			private var cmakedate:String="";
			private var cuserstate:String="";
			private var cscid:String="";
			
			private var bhomeid:String="";
			private var brealname:String="";
			
			private var bemail:String="";
			private var bphone:String="";
			private var baddress:String="";
			private var bcontact:String="";
			private var bcontactid:String="";
			private var bcontactphone:String="";
			private var bregisterdate:String="";
			private var badmin:String="";
			public var loginuserid="";
			public function Query_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();  //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				var flag1:Object = r.getItemAt(0);                            //JSON:6
				var flag:String=flag1.toString();                             //JSON:7
				
				if(flag=="3")
				{
					var g2:Object=r.getItemAt(1);
					var g1:ArrayCollection=new ArrayCollection(g2 as Array);	
					var g3:Object=r.getItemAt(2);
					var g4:ArrayCollection=new ArrayCollection(g3 as Array);	
					var g51:Object=r.getItemAt(3);
					var g6:ArrayCollection=new ArrayCollection(g51 as Array);
					
					
					/*
					ff = g6;
					gridpara = grid2;
					initGrid(ff);
					*/
					//sum2.text=ff.length.toString();
					
					
				}
				if(flag=="5")
				{
					var flag2:Object = r.getItemAt(1);                           
					var flag3:String=flag2.toString();  
					if(flag3=="ok")
						Alert.show("更新成功！","提示");
					else
						Alert.show("更新失败！！","提示");
				}
			}
			
			
			public var pageStartRow:uint = 1; //当前页开始的第一条记录在ff中所处的位置
			public var pageEndRow:uint = 0;//当前页最后一条记录在ff中所处的位置
			public  var  pagecount:int=10; //表示每页记录的条数,默认10条,可以由用户自行定义
			public  var  curpage:int=1; //当前的页码
			public  var  totalpage:int; //一共的页数
			public  var  totalcount:int; //一共的记录条数
			public function initGrid(ff:ArrayCollection):void
			{
				totalcount = ff.length; 
				if(totalcount==0)
					//		Alert.show("没有查到符合条件的用户！","提示");
					curpage  =  1;
				if(ff.length > pagecount){                      
					
					var  curNum:int  = 0; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
					ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
					for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
						//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
					{
						ziyuan.addItem(ff.getItemAt(curNum));
					}
					if((totalcount % pagecount) == 0){ 
						totalpage = Math.floor(totalcount / pagecount); 
					}else{ 
						totalpage = Math.floor(totalcount / pagecount + 1); 
					} 
					gridpara.dataProvider = ziyuan;
					this.pageStartRow = 1; 
					this.pageEndRow = pagecount; 
				} else{
					totalpage=1;
					//ziyuan=ff;
					ziyuan.removeAll();
					for(var i:int=0;i<ff.length;i++)
					{
						ziyuan.addItem(ff.getItemAt(i));
					}
					
					gridpara.dataProvider = ziyuan;
				}
				//Alert.show("22"+txt.text);
				txt.text = "第" + curpage+"页/共"+totalpage+"页"; 
				//Alert.show("11"+txt.text);	
				Fresh_nPage_pPage();
				
			}
			public  function  setPager(event:ItemClickEvent):void
			{
				var value:int = event.target.valueOf();
				
				if(value<=0  ||  value> totalpage){
					Alert.show("该页不存在！");
					inputpage.value=1;
					return;
				}
				else{
					if(totalpage==1){
						ziyuan.removeAll();
						for(var i:int=0;i<ff.length;i++)
						{
							ziyuan.addItem(ff.getItemAt(i));
						}
						gridpara.dataProvider = ziyuan;     
					}else{
						curpage  =  value;
						var  curNum:int  =  (value-1)*pagecount; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
						ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
						for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
							//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
						{
							ziyuan.addItem(ff.getItemAt(curNum));
						}
						gridpara.dataProvider = ziyuan;   
					}                            
					txt.text = " 第 " + curpage+"页/共"+totalpage+"页"; 
					
				}
				Fresh_nPage_pPage();
			} 
			
			public function showPreviousPage(event:ItemClickEvent):void{ 
				curpage = curpage - 1; 
				txt.text = " 第 " + curpage+"页/共"+totalpage+"页"; 
				if (curpage == totalpage) { 
					pageStartRow = (curpage - 1) * pagecount + 1; 
					pageEndRow = totalcount; 
				} else { 
					pageStartRow = (curpage - 1) * pagecount + 1; 
					pageEndRow = curpage * pagecount; 
				} 
				var  curNum:int  =  (curpage-1)*pagecount; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
				ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
				for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
					//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
				{
					ziyuan.addItem(ff.getItemAt(curNum));
				}
				//   Alert.show("IndList:"+IndList.length);     
				
				gridpara.dataProvider = ziyuan;
				Fresh_nPage_pPage();  
			} 
			public function showNextPage(event:ItemClickEvent):void{ 
				curpage = curpage + 1; 
				txt.text = " 第 " + curpage+"页/共"+totalpage+"页"; 
				if (curpage == totalpage) { 
					pageStartRow = (curpage - 1) * pagecount + 1; 
					pageEndRow = totalcount; 
				} else { 
					pageStartRow = (curpage - 1) * pagecount + 1; 
					pageEndRow = curpage * pagecount; 
				} 
				var  curNum:int  =  (curpage-1)*pagecount; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
				ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
				for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
					//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
				{
					ziyuan.addItem(ff.getItemAt(curNum));
				}
				//   Alert.show("IndList:"+IndList.length);                           
				gridpara.dataProvider = ziyuan;      
				Fresh_nPage_pPage();                 
			} 
			
			public function showFirstPage(event:ItemClickEvent):void{ 
				if(totalpage==1){
					ziyuan.removeAll();
					for(var i:int=0;i<ff.length;i++)
					{
						ziyuan.addItem(ff.getItemAt(i));
					}
					gridpara.dataProvider = ziyuan;
					
				}else{
					var  curNum:int  = 0 ; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
					ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
					for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
						//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
					{
						ziyuan.addItem(ff.getItemAt(curNum));
					}
					
					gridpara.dataProvider = ziyuan;  
					
				}
				txt.text = " 第 " + 1 +"页/共"+totalpage+"页"; 
				curpage = 1; 
				Fresh_nPage_pPage();
			} 
			
			public function showLastPage(event:ItemClickEvent):void{ 
				if(totalpage==1){
					curpage = 1; 
					ziyuan.removeAll();
					for(var i:int=0;i<ff.length;i++)
					{
						ziyuan.addItem(ff.getItemAt(i));
					}
					gridpara.dataProvider = ziyuan;
				}
				else{
					curpage = totalpage;                              
					var  curNum:int  =  (curpage-1)*pagecount; //计算出要跳转到的页面种的第一条记录在所有的记录种是第几条记录
					ziyuan.removeAll(); //移出变量中的数据,以便插入新数据,页面中显示的是这个变量中的数据
					for(var  i:int=0; curNum< ff.length&& i< pagecount; i++,curNum++)
						//循环的次数既要小于所有的记录数,也要小于每个页面能显示的记录数; 并且curNum变量中的值也要增加
					{
						ziyuan.addItem(ff.getItemAt(curNum));
					}     
					gridpara.dataProvider = ziyuan;                       
				}
				txt.text = " 第 " + totalpage+"页/共"+totalpage+"页";  
				Fresh_nPage_pPage();
			} 
			
			public function Fresh_nPage_pPage():void{
				if(totalpage==1){
					nPage.enabled = false;
					pPage.enabled=false;
				}
				else if(curpage==1){
					pPage.enabled=false;
					nPage.enabled=true;
				}
				else if(curpage==totalpage){
					pPage.enabled=true;
					nPage.enabled=false;
				}
				else{
					
					pPage.enabled=true;
					nPage.enabled=true;
				}
				
				
			}
			
			import mx.managers.PopUpManager;
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//	PopUpManager.removePopUp(this);
				remove(this);
			}
			
			
			
			//基本信息保存修改
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/CompReg/ComponentServlet";
				httpservice.method="POST";
				var param:Object=new Object;  
				param.kind="modify";
				param.compid=compid.text;
				param.compname=compurl.text;
				
				//param.username=Login_userName;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_modify_handler);
			}
			private function success_modify_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
					Alert.show("操作成功！","提示");
				else
					Alert.show("操作失败！","提示");
			}
			
			
			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			
			//家庭信息修改
			protected function button6_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/userole/ModifyHomeServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Modify_successhandler);		
				
			}
			private function Modify_successhandler(event:ResultEvent):void{
				var re:String=event.result.toString();
				if(re=="ok")
				{
					Alert.show("更新成功！","提示");
				}
				else
				{
					Alert.show("更新失败！","提示");
				}
			}
			
			
			protected function button7_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			
			protected function del1_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org1.text!="")
				{
					org1.setStyle("color","red");
					del1.enabled=true;
					del1.visible=true;
				}
			}
			
			
			protected function del1_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org1.text!="")
				{
					org1.setStyle("color","black");
					del1.enabled=false;
					del1.visible=false;
				}
			}
			
			
			protected function del1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("删除"+org1.text);
			}
			
			
			protected function del2_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org2.text!="")
				{
					org2.setStyle("color","red");
					del2.enabled=true;
					del2.visible=true;
				}
			}
			
			
			protected function del2_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org2.text!="")
				{
					org2.setStyle("color","black");
					del2.enabled=false;
					del2.visible=false;
				}
			}
			
			
			protected function del2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			
			protected function del3_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org3.text!="")
				{
					org3.setStyle("color","red");
					del3.enabled=true;
					del3.visible=true;
				}
			}
			
			
			protected function del3_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org3.text!="")
				{
					org3.setStyle("color","black");
					del3.enabled=false;
					del3.visible=false;
				}
			}
			
			
			protected function del3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			
			protected function del4_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org4.text!="")
				{
					org4.setStyle("color","red");
					del4.enabled=true;
					del4.visible=true;
				}
			}
			
			
			protected function del4_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org4.text!="")
				{
					org4.setStyle("color","black");
					del4.enabled=false;
					del4.visible=false;
				}
			}
			
			
			protected function del4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			
			protected function org2_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org2.text!="")
				{
					org2.setStyle("color","red");
					del2.visible=true;
				}
			}
			
			
			protected function org2_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org2.text!="")
				{
					org2.setStyle("color","black");
					del2.visible=false;
				}
			}
			
			
			protected function org3_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org3.text!="")
				{
					org3.setStyle("color","red");
					del3.visible=true;
				}
			}
			
			
			protected function org3_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org3.text!="")
				{
					org3.setStyle("color","black");
					del3.visible=false;
				}
			}
			
			
			protected function org4_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org4.text!="")
				{
					org4.setStyle("color","red");
					del4.visible=true;
				}
			}
			
			
			protected function org4_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org4.text!="")
				{
					org4.setStyle("color","black");
					del4.visible=false;
				}
			}
			
			
			protected function org1_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org1.text!="")
				{
					org1.setStyle("color","red");
					del1.visible=true;
				}
			}
			
			
			protected function org1_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(org1.text!="")
				{
					org1.setStyle("color","black");
					del1.visible=false;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	
	<s:Label x="279" y="10" text="构件详细信息" fontSize="18" fontFamily="微软雅黑"/>
	
	<s:BorderContainer x="10" y="36" width="638" height="480" fontFamily="微软雅黑">
		<s:BorderContainer x="0" y="0" width="636" height="29">
			
			<mx:Image x="0" y="0" width="635" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false" height="27"/>
			<s:Label x="10" y="8" text="基本信息" fontSize="14"/>
		</s:BorderContainer>
		<s:Label y="64" text="构件ID：" fontSize="13" x="23"/>
		<s:TextArea y="57" height="25" width="92" editable="false" enabled="false" x="80" id="compid"/>
		
		
		<s:Label y="152" text="构件名称：" fontSize="13" x="10"/>
		<s:TextArea y="145" height="25" width="271" editable="true" enabled="false" x="82" id="compname"/>
		<s:Label x="24" y="109" text="创建者：" fontSize="13" />
		<s:TextInput x="81" y="102" enabled="false" id="makeperson" height="25"/>
		<s:Label x="10" y="251" text="创建日期：" fontSize="13"/>
		<s:TextInput x="82" y="246" enabled="false" id="makedate" height="25"/>
		<s:Label x="281" y="60" text="当前状态：" fontSize="13"/>
		<s:DropDownList x="352" y="55" width="128" id="auserstate" height="25" enabled="false">
			<mx:ArrayCollection> 
				<fx:Object label="启用" data="0"/> 
				<fx:Object label="禁用" data="1"/> 		
			</mx:ArrayCollection> 
		</s:DropDownList>
		<s:Label x="12" y="292" text="所属组织：" fontSize="13"/>
		<s:TextInput x="83" y="285" enabled="true" editable="false" id="org1" width="66" borderVisible="false" mouseOver="org1_mouseOverHandler(event)" mouseOut="org1_mouseOutHandler(event)"/>
		<s:Button x="556" y="453" label="保存修改" click="button4_clickHandler(event)" enabled="false"/>
		<s:TextInput x="195" y="285" width="66" enabled="true" editable="false" id="org2" borderVisible="false" mouseOver="org2_mouseOverHandler(event)" mouseOut="org2_mouseOutHandler(event)"/>
		<s:TextInput x="312" y="285" width="66" enabled="true" editable="false" id="org3" borderVisible="false" mouseOver="org3_mouseOverHandler(event)" mouseOut="org3_mouseOutHandler(event)"/>
		<s:TextInput x="435" y="285" width="66" enabled="true" editable="false" id="org4" borderVisible="false" mouseOver="org4_mouseOverHandler(event)" mouseOut="org4_mouseOutHandler(event)"/>
		<s:Label x="10" y="335" text="构件说明：" fontSize="13"/>
		<s:TextArea x="80" y="331" width="460" height="115" id="compinfo" enabled="false"/>
		<mx:Image x="147" y="287" width="19" height="18" id="del1" source="assets/del.jpg" scaleContent="true" maintainAspectRatio="false" visible="false" mouseOver="del1_mouseOverHandler(event)" mouseOut="del1_mouseOutHandler(event)" click="del1_clickHandler(event)" buttonMode="true" useHandCursor="true" enabled="false"/>
		<mx:Image x="260" y="287" width="19" height="18" id="del2" source="assets/del.jpg" scaleContent="true" maintainAspectRatio="false" visible="false" mouseOver="del2_mouseOverHandler(event)" mouseOut="del2_mouseOutHandler(event)" click="del2_clickHandler(event)" buttonMode="true" useHandCursor="true" enabled="false"/>
		<mx:Image x="377" y="287" width="19" height="18" id="del3" source="assets/del.jpg" scaleContent="true" maintainAspectRatio="false" visible="false" mouseOver="del3_mouseOverHandler(event)" mouseOut="del3_mouseOutHandler(event)" click="del3_clickHandler(event)" buttonMode="true" useHandCursor="true" enabled="false"/>
		<mx:Image x="500" y="287" width="19" height="18" id="del4" source="assets/del.jpg" scaleContent="true" maintainAspectRatio="false" visible="false" mouseOver="del4_mouseOverHandler(event)" mouseOut="del4_mouseOutHandler(event)" click="del4_clickHandler(event)" buttonMode="true" useHandCursor="true" enabled="false"/>
		<s:Label x="293" y="108" text="开发者：" fontSize="13"/>
		<s:TextInput x="352" y="101" enabled="false" id="compdev" height="25"/>
		<s:Label x="10" y="206" text="构件URL：" fontSize="13"/>
		<s:TextInput x="82" y="201" width="544" height="25" enabled="false" id="compurl"/>
		
		
		
	</s:BorderContainer>
	<s:Button x="578" y="10" label="关闭" click="button3_clickHandler(event)" fontFamily="微软雅黑"/>
</s:Application>
