<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" creationComplete="application1_creationCompleteHandler(event)"  backgroundColor="#FDFEFE" width="660" height="599" xmlns:util="util.*">

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var company:XML=<list>
			<menu name="我的业务">
			<order name="菜单A" />
			<order name="菜单B" />
			</menu>
			</list>;
			[Bindable]
			private var companyData:XMLListCollection=new XMLListCollection(company.menu);
			
			private var Login_user:String="liu";
			private var Login_role:String="superadmin";
			
			private function addNode():void
			{
				// 新建节点
				var newNode:XML=<order/>;
				newNode.@name=empName.text;
				// 添加节点
				var xml:XML=XML(tree.selectedItem);
				if (xml.length() > 0)
				{
					xml[0].appendChild(newNode);
				}
			}
			
			private function removeNode():void
			{
				if (tree.selectedItem != null)
				{
					var node:XML=XML(tree.selectedItem);
					// 不能删除空节点和部门A，B
					if (node == null || node.localName() == "menu")
					{
						Alert.show("不能删除空节点和部门A，B！");
					return;
				}
				// 获取当前节点的父节点下的所有子节点
				var children:XMLList=XMLList(node.parent()).children();
				// 将其转换为 XMLListCollection
				var childrenCol:XMLListCollection=new XMLListCollection(children);
				// 获取选中节点索引，并删除该节点
				var i:Number=childrenCol.getItemIndex(node);
				childrenCol.removeItemAt(i);
				}else{
					Alert.show("请选中一个节点再进行删除！");
				}
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var re:String=tree.dataProvider.toString();
				Alert.show(re);
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var node:XML=(XML)(tree.selectedItem);
				node.@name=newname.text;
			}


			protected function textinput1_focusInHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				
				myname.text="";
			} 


			protected function myname_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				if(myname.text=="")
				{
					myname.text="我的菜单";
				}
			}

			//提交订单
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var name:String=myname.text;
				var menu:String=tree.dataProvider.toString();
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/MenuServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="add";
				param.name=myname.text;
				param.menu=menu;
				param.user=Login_user;
				param.role=Login_role;
				
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_handler);
			}
			private function success_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
				{
					Alert.show("操作成功","提示");
					 var company1:XML=<list>
								<menu name="我的业务">
								<order name="菜单A" />
								<order name="菜单B" />
								</menu>
								</list>;
					
					 var companyData1:XMLListCollection=new XMLListCollection(company1.menu);
					tree.dataProvider=companyData1;
					
				}
				else
					Alert.show("操作失败","提示");
			}


			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				query_menu();
			}
			private function query_menu():void
			{
				var cname:String=cmenuname.text;
				var sd:String="";
				var ed:String="";
				if(startdate.text==""&&enddate.text=="")
				{
					sd="";
					ed="";
				} 
				else if(startdate.text!=""&&enddate.text!="")
				{
					sd=startdate.text;
					ed=enddate.text;
				}
				else if(startdate.text==""&&enddate.text!="")
				{
					Alert.show("请选择开始日期");
				}
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/MenuServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="query";
				param.user=Login_user;
				param.role=Login_role;
				param.name=cname;
				param.sd=sd;
				param.ed=ed;
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_query_handler);
			}
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object;       //JSON:2
			private function success_query_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();  //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				var g2:Object=r.getItemAt(0);
				var g1:ArrayCollection=new ArrayCollection(g2 as Array);
				if(g1.length==0)
					Alert.show("您还没有创建菜单！","提示");
			//	Alert.show(re);
				grid2.initdata(g1,10);
			}


			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				startdate.text="";
				enddate.text="";
			}

			//构件选择
			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				/*
				var editObj:IFlexDisplayObject = 
					PopUpManager.createPopUp(DisplayObject(Application.application),chooseComp,true);
				*/
				var editWin:MenuChooseComp =new  MenuChooseComp();			
				//	editWin.callBackFunction=this.callFunction;
				editWin.mainApp = this;	
				editWin.havecomp=tree.dataProvider.toString();
				editWin.Login_role=Login_role;
				editWin.Login_user=Login_user;
				show(editWin,this,true);
				//editWin.initData();
				editWin.addEventListener("finish",callFunction);
			//	PopUpManager.centerPopUp(editWin);	
			}
			var cccompname:String="";
			var cccompid:String="";
			var cccomurl:String="";
			private function callFunction(event:Event)
			{
				ccomp.text=cccompname;
				//	Alert.show(cccompid);
			}


			protected function button6_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var newNode:XML=<order/>;
				newNode.@name=ccomp.text;
				newNode.@url=cccomurl;
				newNode.@id=cccompid;
				// 添加节点
				var xml:XML=XML(tree.selectedItem);
				if (xml.length() > 0)
				{
					xml[0].appendChild(newNode);
				}
			}


			protected function button7_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var company1:XML=<list>
											   <menu name="我的业务">
											   <order name="菜单A" />
											   <order name="菜单B" />
											   </menu>
											   </list>;
				
				var companyData1:XMLListCollection=new XMLListCollection(company1.menu);
				tree.dataProvider=companyData1;
				
				ccomp.text="";
			}


			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				readCookie();
			}
			private function readCookie():void
			{
				var test2:SharedObject=SharedObject.getLocal("userLogin","/");
				if(test2.size)
				{
					var name:String=test2.data.name;
					var org:String=test2.data.org;
					var role:String=test2.data.role;
					
					Login_user=name;
					Login_role=role;
					
					
				}
				else 
				{
					navigateToURL(new URLRequest("http://localhost:8080/icessh/ICESSHSC.html"),"self");
				}
				
			}

		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.core.IFlexDisplayObject;
			import flash.display.DisplayObject;
			import mx.events.ListEvent;
			public function check_menu_clickHandler(event:MouseEvent):void
			{
			//	Alert.show("1111111");
				/*
				var editObj:IFlexDisplayObject = 
					PopUpManager.createPopUp(DisplayObject(Application.application),MenuInfo,true);
				*/
				var editWin:MenuInfo = new MenuInfo();			
				editWin.men=grid2.cudg.selectedItem.menu;
				show(editWin,this,true);
				editWin.menuid.text=grid2.cudg.selectedItem.id;
				editWin.menuname.text=grid2.cudg.selectedItem.name;
				editWin.makeperson.text=grid2.cudg.selectedItem.make;
				editWin.makedate.text=grid2.cudg.selectedItem.makedate;
				editWin.mainApp = this;	
				editWin.initData();	
			//	editWin.addEventListener("finish",ModifyFinish);
			//	PopUpManager.centerPopUp(editWin);	
			//	Alert.show("222222222");
			}
			public function ModifyFinish():void
			{
				
			}

			protected function tree_itemClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				
				var item:Object = Tree(event.currentTarget).selectedItem;
				if (tree.dataDescriptor.isBranch(item)) {
					tree.expandItem(item, !tree.isItemOpen(item), true);
					//var item:String=tree.selectedNode.@label;
					//Alert.show("item","tishi");
				}
				
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			public function button2_del_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var menuid:String=grid2.cudg.selectedItem.id;
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/MenuServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="del";
				
				param.menuid=menuid;
				
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_del_handler);
			}
			private function success_del_handler(event:ResultEvent):void
			{
				var re=event.result.toString();
				if(re=="ok")
				{
					Alert.show("操作成功","提示");
				}
				else
					Alert.show("操作失败","提示");
				query_menu();
			}
		]]>
	</fx:Script>
	<mx:TabNavigator x="0" y="10" width="658" height="588" fontFamily="微软雅黑">
		<s:NavigatorContent label="创建菜单" width="100%" height="100%">
			<mx:Tree id="tree"
					 dataProvider="{companyData}"
					 labelField="@name"
					 height="516"
					 width="252" x="20" y="10" itemClick="tree_itemClickHandler(event)"/>
			<s:BorderContainer x="288" y="10" width="343" height="164">
				<s:Label x="10" y="10" text="说明："/>
				<s:Label x="23" y="41" text="1、在添加菜单前，需要选中其父菜单"/>
				<s:Label x="23" y="76" text="2、在删除菜单时，需要选中要删除的菜单"/>
				<s:Label x="23" y="110" text="3、删除某菜单时，其所有子菜单均会被删除"/>
			</s:BorderContainer>
			<s:BorderContainer x="287" y="188" width="344" height="156">
				<mx:TextInput id="empName"
							  width="117"
							  text="菜单名" x="19" y="42"/>
				<mx:Button label="添加菜单"
						   click="addNode();" x="156" y="42"/>
				<mx:Button label="删除节点"
						   click="removeNode();" x="19" y="80"/>
				<mx:Button label="按钮" click="button1_clickHandler(event)" x="265" y="77"/>
				<s:Label x="10" y="10" text="添加菜单"/>
				<s:TextInput x="19" y="112" text="新菜单名" id="newname"/>
				<s:Button x="161" y="112" label="更改菜单名" click="button2_clickHandler(event)"/>
			</s:BorderContainer>
			<s:BorderContainer x="288" y="358" width="343" height="102">
				<s:Label x="10" y="10" text="添加构件"/>
				<s:TextInput x="20" y="34" enabled="false" id="ccomp"/>
				<s:Button x="165" y="36" label="选取构件" click="button5_clickHandler(event)"/>
				<s:Button x="251" y="36" label="添加" click="button6_clickHandler(event)"/>
				<s:Label x="149" y="40" text="→"/>
				<s:Label x="237" y="40" text="→"/>
			</s:BorderContainer>
			<s:Button x="424" y="505" label="提交" click="button3_clickHandler(event)"/>
			<s:Button x="527" y="505" label="放弃" click="button7_clickHandler(event)"/>
			<s:Label x="294" y="473" text="菜单名称："/>
			<s:TextInput x="365" y="468" width="222" text="我的菜单" focusIn="textinput1_focusInHandler(event)" id="myname" focusOut="myname_focusOutHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="菜单查询" width="100%" height="100%">
			<s:BorderContainer x="10" y="20" width="636" height="144">
				<s:BorderContainer x="0" y="0" width="635" height="30">
				<mx:Image x="0" y="0" width="633" height="28" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false"/>
				<s:Label x="10" y="7" text="查询条件" fontSize="14"/>
				
				
				</s:BorderContainer>
				<s:Label x="15" y="49" text="菜单名称：" fontSize="13"/>
				<s:TextInput x="88" y="46" id="cmenuname" width="170"/>
				<s:Label x="10" y="95" text="创建日期：" fontSize="13"/>
				<mx:DateField x="89" y="90" id="startdate" width="115" formatString="YYYY-MM-DD"/>
				<mx:DateField x="253" y="90" id="enddate" width="115" formatString="YYYY-MM-DD"/>
				<s:Label x="218" y="96" text="——" width="26"/>
				<s:Button x="476" y="89" label="查询" click="button4_clickHandler(event)"/>
				<s:Label x="266" y="54" text="（支持模糊查询）"/>
				<mx:LinkButton x="368" y="92" label="清空" click="linkbutton1_clickHandler(event)"/>
			
			</s:BorderContainer>
			<s:BorderContainer x="10" y="187" width="636" height="341">
				
				<s:BorderContainer x="0" y="0" width="634" height="30">
					<mx:Image x="0" y="0" width="632" height="28" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false"/>
					<s:Label x="10" y="7" text="查询结果" fontSize="14"/>
					
				</s:BorderContainer>
			<util:CustomDataGridUnscroll x="3" y="36" height="303" width="631"  enabled="true" id="grid2">
				<util:mygridcolumns>
					
				
					<mx:DataGridColumn headerText="序号" dataField="num" width="35" editable="false" textAlign="center" visible="true" draggable="false"/>
					<mx:DataGridColumn headerText="" dataField="id" visible="false"/>
					<mx:DataGridColumn headerText="菜单名称" dataField="name" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>
					<mx:DataGridColumn headerText="菜单" dataField="menu" textAlign="center" editable="false" draggable="false" visible="false" itemRenderer="mx.controls.Label"/>
					
					
					<mx:DataGridColumn headerText="创建" dataField="make" textAlign="center" editable="false" draggable="false" visible="false" itemRenderer="mx.controls.Label"/>
					<mx:DataGridColumn headerText="创建日期" dataField="makedate" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>
					
					<mx:DataGridColumn headerText="详细"  textAlign="center" editable="false" draggable="false">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Button label="查看" click="outerDocument.check_menu_clickHandler(event)">
								</mx:Button>
								
							</fx:Component>
						</mx:itemRenderer>
						
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="删除"  textAlign="center" editable="false" draggable="false">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Button label="删除" click="outerDocument.button2_del_clickHandler(event)">
									
								</mx:Button>
								
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</util:mygridcolumns>
				</util:CustomDataGridUnscroll>

			
			</s:BorderContainer>
		</s:NavigatorContent>
	</mx:TabNavigator>
</mx:Application>
