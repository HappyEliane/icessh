<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute"  backgroundColor="#FDFEFE" width="660" height="599" creationComplete="application1_creationCompleteHandler(event)" xmlns:util="util.*">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>

		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			

			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				sd.text="";
				ed.text="";
			//	readCookie();
			}
			

		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.core.IFlexDisplayObject;
			import mx.managers.PopUpManager;
			[Bindable] 
			private var today:Date = new Date(new Date().setHours(0,0,0,0)); 
			[Bindable] 
			private var start:Date = today; 
			[Bindable] 
			private var end:Date = start; 
			
			//======================================= 
			//Event Handler 
			//======================================= 
			
			/*DateChange*/ 
			private function onDateChangeHandler(event:Event):void 
			{ 
				//var currentDF:DateField = DateField(event.currentTarget); 
				
				
				if(sd.text == "") 
				{ 
					sd.selectedDate = start; 
				} 
				else 
				{ 
					start = sd.selectedDate;         
				} 
				
				if(ed.text == "") 
				{ 
					ed.selectedDate = this.end; 
				} 
				else 
				{ 
					this.end = ed.selectedDate; 
				} 
				
			}                      
			public function check_menu_clickHandler(event:MouseEvent):void
			{
				/*
				var editObj:IFlexDisplayObject = 
					PopUpManager.createPopUp(DisplayObject(Application.application),busInfo,true);
				*/
				var editWin:QBBusInfo = new QBBusInfo();			
				//	editWin.callBackFunction=this.callFunction;
				editWin.mainApp = this;
				editWin.sm=grid1.cudg.selectedItem.smenu;
				editWin.bm=grid1.cudg.selectedItem.bmenu;
				editWin.hm=grid1.cudg.selectedItem.hmenu;
				editWin.pm=grid1.cudg.selectedItem.pmenu;
				editWin.busid=grid1.cudg.selectedItem.id;
				editWin.make=grid1.cudg.selectedItem.make;
				show(editWin,this,true);
				editWin.bname.text=grid1.cudg.selectedItem.name;
				editWin.bauthor.text=grid1.cudg.selectedItem.author;
				editWin.bmakedate.text=grid1.cudg.selectedItem.makedate;
				editWin.binfo.text=grid1.cudg.selectedItem.des;
				
				editWin.admin.text="用户名："+grid1.cudg.selectedItem.adminuser+", 角色名："+grid1.cudg.selectedItem.adminrole;
				//editWin.initData();
				editWin.addEventListener("finish",callFunction);
			//	PopUpManager.centerPopUp(editWin);
			}
			public function callFunction(event:Event):void
			{
				queryBus();
			}
			public function button2_del_clickHandler(event:MouseEvent):void
			{
				var busname:String=grid1.cudg.selectedItem.name;
				Alert.show(busname,"您确定删除以下业务么？",3,this,deleteCallBack);
				
			}
			import mx.events.CloseEvent;
			private function deleteCallBack(event:CloseEvent):void
			{
				if(event.detail==Alert.YES)
				{
					var httpservice:HTTPService=new HTTPService();
					httpservice.resultFormat="text";
				
					httpservice.url="http://localhost:8080/icessh/BCModifyMenuServlet";
					httpservice.method="POST";
					var param:Object=new Object;
					param.kind="del";
					param.id=grid1.cudg.selectedItem.id;	
					httpservice.send(param);
					httpservice.addEventListener(ResultEvent.RESULT,success_delbus_handler);
				}
			}
			private function success_delbus_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
					Alert.show("操作成功","提示");
				else
					Alert.show("操作失败","提示");
				
				queryBus();
			}
			
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				sd.text="";
				ed.text="";
			}
			
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				queryBus();
			}
			private function queryBus():void
			{
				var busname:String=bname.text;
				var bmaker:String=bauthor.text;
				var sdate:String=sd.text;
				var edate:String=ed.text;
				var de:String=bdes.text;
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/BCModifyMenuServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="query";
				param.name=busname;
				param.sd=sdate;
				param.ed=edate;
				param.des=de;
				param.maker=bmaker;
				
				
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_query_handler);
			}
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object; 
			private function success_query_handler(event:ResultEvent):void
			{
				//JSON:2
				
				var re:String=event.result.toString();                        //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
			//	Alert.show(re);
				var g2:Object=r.getItemAt(0);
				var g1:ArrayCollection=new ArrayCollection(g2 as Array);
				if(g1.length==0)
					Alert.show("没有符合条件的记录","提示");
		
				grid1.initdata(g1,10);
				
			}
			
			
			
		]]>
	</fx:Script>
	<s:BorderContainer x="10" y="10" width="641" height="233" fontFamily="微软雅黑">
		<s:BorderContainer x="0" y="0" width="639" height="33">
			<mx:Image x="0" y="0" width="638" source="assets/back01.jpg" height="31" scaleContent="true" maintainAspectRatio="false"/>
			<s:Label x="10" y="10" text="查询条件" fontSize="14"/>
		</s:BorderContainer>
		<s:Label x="10" y="60" text="业务名称：" fontSize="13"/>
		<s:TextInput x="80" y="52" width="187" height="25" id="bname"/>
		<s:Label x="24" y="105" text="注册人：" fontSize="13"/>
		<s:TextInput x="80" y="97" width="187" height="25" id="bauthor"/>
		<s:Label x="10" y="150" text="注册日期：" fontSize="13"/>
		<mx:DateField x="80" y="142" width="130" height="25" formatString="YYYY-MM-DD" id="sd"  selectedDate="{start}" selectableRange="{{rangeEnd:end}}" change="onDateChangeHandler(event)"/>
		<mx:DateField x="271" y="142" width="130" height="25" formatString="YYYY-MM-DD" id="ed" showToday="true" selectedDate="{end}" selectableRange="{{rangeStart:start,rangeEnd:today}}" change="onDateChangeHandler(event)"/>
		<s:Label x="221" y="149" text="——" width="30"/>
		<s:Label x="10" y="195" text="业务描述：" fontSize="13"/>
		<s:TextInput x="80" y="189" width="316" height="25"  id="bdes"/>
		<s:Button x="518" y="187" label="查询" click="button1_clickHandler(event)"/>
		<mx:LinkButton x="408" y="143" label="清除" click="linkbutton1_clickHandler(event)"/>
	</s:BorderContainer>
	<s:BorderContainer x="10" y="257" width="640" height="332" fontFamily="微软雅黑">
		
		<util:CustomDataGridUnscroll x="4" y="39" height="291" width="630"   enabled="true" id="grid1">
			<util:mygridcolumns>
				<mx:DataGridColumn headerText="序号" dataField="num" width="35" editable="false" textAlign="center" visible="true" draggable="false"/>
				<mx:DataGridColumn headerText="" dataField="id" visible="false"/>
				<mx:DataGridColumn headerText="业务名称" dataField="name" textAlign="center" editable="false" draggable="false"/>
				<mx:DataGridColumn headerText="注册人" dataField="author" textAlign="center" editable="false" draggable="false" visible="true"/>
				<mx:DataGridColumn headerText="创建日期" dataField="makedate" textAlign="center" editable="false" draggable="false"/>
				
				<mx:DataGridColumn headerText="业务描述" dataField="des" textAlign="center" editable="false" draggable="false" visible="true"/>
				<mx:DataGridColumn headerText="" dataField="make" textAlign="center" editable="false" draggable="false" visible="false"/>
				<mx:DataGridColumn headerText="" dataField="adminuser" textAlign="center" editable="false" draggable="false" visible="false"/>
				<mx:DataGridColumn headerText="" dataField="adminrole" textAlign="center" editable="false" draggable="false" visible="false"/>
				
				
				<mx:DataGridColumn headerText="详细"  textAlign="center" editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Button label="查看" click="outerDocument.check_menu_clickHandler(event)">
							</mx:Button>
							
						</fx:Component>
					</mx:itemRenderer>
					
				</mx:DataGridColumn>
				
				<mx:DataGridColumn headerText="删除"  textAlign="center" editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Button label="删除" click="outerDocument.button2_del_clickHandler(event)">
								
							</mx:Button>
							
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</util:mygridcolumns>
			</util:CustomDataGridUnscroll>
	</s:BorderContainer>
	<s:BorderContainer x="10" y="258" width="639" height="33">
		<mx:Image x="0" y="0" width="638" source="assets/back01.jpg" height="31" scaleContent="true" maintainAspectRatio="false"/>
		<s:Label x="10" y="10" text="查询结果" fontSize="14" fontFamily="微软雅黑"/>
	</s:BorderContainer>
</mx:Application>
