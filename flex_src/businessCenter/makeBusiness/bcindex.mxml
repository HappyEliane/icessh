<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" creationComplete="application1_creationCompleteHandler(event)"  backgroundColor="#FDFEFE" width="660" height="599">

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			import spark.events.TextOperationEvent;
			var Login_user:String="liu";
			var Login_role:String="superadmin";
			
			var tree:Tree;
			[Bindable]
			private var Data1:XML=<list>
			<order name="我的业务">
			<order name="菜单A" />
			<order name="菜单B" />
			</order>
			</list>;
			[Bindable]
			private var Data2:XML=<list>
			<order name="我的业务">
			<order name="菜单A" />
			<order name="菜单B" />
			</order>
			</list>;
			[Bindable]
			private var Data3:XML=<list>
			<order name="我的业务">
			<order name="菜单A" />
			<order name="菜单B" />
			</order>
			</list>;
			[Bindable]
			private var Data4:XML=<list>
			<order name="我的业务">
			<order name="菜单A" />
			<order name="菜单B" />
			</order>
			</list>;
			[Bindable]
			private var sdata:XMLListCollection=new XMLListCollection(Data1.order);
			[Bindable]
			private var bdata:XMLListCollection=new XMLListCollection(Data2.order);
			[Bindable]
			private var hdata:XMLListCollection=new XMLListCollection(Data3.order);
			[Bindable]
			private var pdata:XMLListCollection=new XMLListCollection(Data4.order);
			
			
			private function addNode():void
			{
				// 新建节点
				var newNode:XML=<order/>;
				newNode.@name=empName.text;
				// 添加节点
				var xml:XML=XML(tree.selectedItem);
				if (xml.length() > 0)
				{
					xml[0].appendChild(newNode);
				}
			}
			
			private function removeNode():void
			{
				if (tree.selectedItem != null)
				{
					var node:XML=XML(tree.selectedItem);
					// 不能删除空节点和部门A，B
					if (node == null || node.localName() == "menu")
					{
						Alert.show("不能删除空节点和部门A，B！");
						return;
					}
					// 获取当前节点的父节点下的所有子节点
					var children:XMLList=XMLList(node.parent()).children();
					// 将其转换为 XMLListCollection
					var childrenCol:XMLListCollection=new XMLListCollection(children);
					// 获取选中节点索引，并删除该节点
					var i:Number=childrenCol.getItemIndex(node);
					childrenCol.removeItemAt(i);
				}else{
					Alert.show("请选中一个节点再进行删除！");
				}
			}
			protected function tree_itemClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				
				var item:Object = Tree(event.currentTarget).selectedItem;
				if (tree.dataDescriptor.isBranch(item)) {
					tree.expandItem(item, !tree.isItemOpen(item), true);
					//var item:String=tree.selectedNode.@label;
					//Alert.show("item","tishi");
				}
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var re:String=tree.dataProvider.toString();
				Alert.show(re);
			}
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var node:XML=(XML)(tree.selectedItem);
				node.@name=newname.text;
			}
			


			protected function accordion1_changeHandler(event:IndexChangedEvent):void
			{
				// TODO Auto-generated method stub
				var ad:Accordion = event.currentTarget as Accordion;  
				//两种方法  
				//第一种获得index  
				var index:int = event.newIndex; 
				if(index==0)
				{
					
					tree=stree;
				}
				if(index==1)
				{
					
					tree=btree;
				}
				if(index==2)
				{
					
					tree=htree;
					tree=htree;
				}
				if(index==3)
				{
					
					tree=ptree;
				}

				validateNow();
			}


			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				readCookie();
				tree=ptree;
				
			}


			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(checkName() && checkAuthor() && checkDes() && checkUserRole())
				{
					id2.enabled=true;
					tab.selectedIndex=1;
				}
				
			}

			private function checkName():Boolean
			{
				var name:String=bname.text;
				if(name=="")
				{
					bname.setStyle("borderColor","red");
					return false;
				}
				else
				{
					bname.setStyle("borderColor","black");
					return true;
				}
			}
			protected function bname_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				bname.setStyle("borderColor","black");
			}

			private function checkAuthor():Boolean
			{
				var auth:String=author.text;
				if(auth=="")
				{
					author.setStyle("borderColor","red");
					return false;
				}
				else
				{
					author.setStyle("borderColor","black");
					return true;
				}
			}
			protected function author_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				author.setStyle("borderColor","black");
			}

			private function checkDes():Boolean
			{
				var de:String=des.text;
				if(de=="")
				{
					des.setStyle("borderColor","red");
					return false;
				}
				else
				{
					des.setStyle("borderColor","black");
					return true;
				}
			}
			protected function des_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				des.setStyle("borderColor","black");
			}
			


			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				// TODO Auto-generated method stub
				/*
				var editObj:IFlexDisplayObject = 
					PopUpManager.createPopUp(DisplayObject(Application.application),chooseComp,true);
				*/
				var editWin:MBChooseComp = new MBChooseComp();			
				//	editWin.callBackFunction=this.callFunction;
				editWin.mainApp = this;	
				editWin.haveComp=tree.dataProvider.toString();
				show(editWin,this,true);
				//editWin.initData();
				editWin.addEventListener("finish",callFunction);
			//	PopUpManager.centerPopUp(editWin);	
			}
			var cccompname:String="";
			var cccompid:String="";
			var cccomurl:String="";
			private function callFunction(event:Event)
			{
				ccomp.text=cccompname;
				//	Alert.show(cccompid);
			}


			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var newNode:XML=<order/>;
				newNode.@name=ccomp.text;
				newNode.@url=cccomurl;
				newNode.@id=cccompid;
				// 添加节点
				var xml:XML=XML(tree.selectedItem);
				if (xml.length() > 0)
				{
					xml[0].appendChild(newNode);
				}
			}

			//菜单提交
			protected function button6_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
		//		Alert.show("111111");
				
				
				var smenu:String=stree.dataProvider.toString();
				var bmenu:String=btree.dataProvider.toString();
				var hmenu:String=htree.dataProvider.toString();
				var pmenu:String=ptree.dataProvider.toString();
				var businessName:String=bname.text;
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/BCModifyMenuServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="add";
				param.name=businessName;
				param.user=Login_user;
				param.role=Login_role;
				param.des=des.text;
				param.maker=author.text;
				param.smenu=stree.dataProvider.toString();
				param.bmenu=btree.dataProvider.toString();
				param.hmenu=htree.dataProvider.toString();
				param.pmenu=ptree.dataProvider.toString();
				param.admin=userroleid;
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_add_handler);
				
				
			}
			private function success_add_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
					Alert.show("创建成功","提示");
				else
					Alert.show("创建失败","提示");
			}


			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				/*
				var editObj:IFlexDisplayObject = 
					PopUpManager.createPopUp(DisplayObject(Application.application),chooseAdmin,true);
				*/
				
				var editWin:chooseAdmin = new chooseAdmin();			
				//	editWin.callBackFunction=this.callFunction;
				editWin.mainApp = this;	
				editWin.Login_user=Login_user;
				editWin.Login_role=Login_role;
				show(editWin,this,true);
				//editWin.initData();
				editWin.addEventListener("finish",callAdminFunction);
			//	PopUpManager.centerPopUp(editWin);	
				
			}
			private function checkUserRole():Boolean
			{
				if(userrole.text=="")
				{
					userrole.setStyle("borderColor","red");
					return false;
				}
				else
				{
					userrole.setStyle("borderColor","black");
					return true;
				}
			}
			public var userroleid:String="";
			public var username:String="";
			public var rolename:String="";
			private function callAdminFunction(event:Event):void
			{
				userrole.text="用户名："+username+"  角色名："+rolename;
			}


			protected function button7_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				userroleid="";
				username="";
				rolename="";
				bname.text="";
				author.text="";
				des.text="";
				userrole.text="";
			}
			private function readCookie():void
			{
				var test2:SharedObject=SharedObject.getLocal("userLogin","/");
				if(test2.size)
				{
					var name:String=test2.data.name;
					var org:String=test2.data.org;
					var role:String=test2.data.role;
					
					Login_user=name;
					Login_role=role;
					
					
				}
				else 
				{
					navigateToURL(new URLRequest("http://localhost:8080/icessh/ICESSHSC.html"),"self");
				}
				
			}

		]]>
	</fx:Script>
	<mx:TabNavigator x="0" y="0" width="660" height="599" id="tab" fontFamily="微软雅黑">
		<s:NavigatorContent label="第一步：业务中心定义" width="100%" height="100%">
			<s:Label x="35" y="100" text="业务名称：" fontSize="14" fontFamily="微软雅黑"/>
			<s:TextInput x="111" y="95" width="216" height="25" id="bname" change="bname_changeHandler(event)" fontFamily="微软雅黑"/>
			<s:Label x="50" y="147" text="注册人：" fontSize="14" fontFamily="微软雅黑"/>
			<s:TextInput x="111" y="142" width="217" height="25" id="author" change="author_changeHandler(event)" fontFamily="微软雅黑"/>
			<s:Label x="35" y="244" text="业务描述：" fontSize="14" fontFamily="微软雅黑"/>
			<s:TextArea x="111" y="240" width="476" id="des" change="des_changeHandler(event)" fontFamily="微软雅黑">
				
			</s:TextArea>
			
			<s:Button x="427" y="445" label="下一步" click="button3_clickHandler(event)" fontFamily="微软雅黑"/>
			<s:Label x="50" y="195" text="管理员：" fontSize="14" fontFamily="微软雅黑"/>
			<s:TextInput x="111" y="191" width="214" height="25" enabled="false" id="userrole" fontFamily="微软雅黑"/>
			<mx:LinkButton x="340" y="192" label="选择" click="linkbutton1_clickHandler(event)" fontFamily="微软雅黑"/>
			<s:Button x="529" y="445" label="置空" click="button7_clickHandler(event)" fontFamily="微软雅黑"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="第二步：业务菜单配置" width="100%" height="100%" enabled="false" id="id2">
			<mx:Accordion x="10" y="10" width="200" height="100%" change="accordion1_changeHandler(event)" selectedIndex="3" fontFamily="微软雅黑">
				<mx:VBox label="服务中心菜单" width="100%" height="100%"  fontFamily="微软雅黑">
					<mx:Tree x="0" y="0" width="198" height="465" id="stree" dataProvider="{sdata}" labelField="@name" itemClick="tree_itemClickHandler(event)"></mx:Tree>
				</mx:VBox>
				<mx:VBox label="业务中心菜单" width="100%" height="100%" fontFamily="微软雅黑">
					<mx:Tree x="0" y="0" width="198" height="465" id="btree" dataProvider="{bdata}" labelField="@name" itemClick="tree_itemClickHandler(event)"></mx:Tree>
				</mx:VBox>
				<mx:VBox label="家庭用户菜单" width="100%" height="100%" fontFamily="微软雅黑">
					<mx:Tree x="0" y="0" width="198" height="464" id="htree" dataProvider="{hdata}" labelField="@name" itemClick="tree_itemClickHandler(event)"></mx:Tree>
				</mx:VBox>
				<mx:VBox label="供应商菜单" width="100%" height="100%" fontFamily="微软雅黑">
					<mx:Tree x="0" y="0" width="199" height="464" id="ptree" dataProvider="{pdata}" labelField="@name" itemClick="tree_itemClickHandler(event)"></mx:Tree>
				</mx:VBox>
			</mx:Accordion>
			<s:BorderContainer x="259" y="40" width="373" height="164">
				<s:Label x="10" y="10" text="说明：" fontFamily="微软雅黑"/>
				<s:Label x="23" y="41" text="1、在添加菜单前，需要选中其父菜单" fontFamily="微软雅黑"/>
				<s:Label x="23" y="76" text="2、在删除菜单时，需要选中要删除的菜单" fontFamily="微软雅黑"/>
				<s:Label x="23" y="110" text="3、删除某菜单时，其所有子菜单均会被删除" fontFamily="微软雅黑"/>
			</s:BorderContainer>
			<s:BorderContainer x="259" y="218" width="373" height="156">
				<mx:TextInput id="empName"
							  width="117"
							  text="菜单名" x="19" y="42" fontFamily="微软雅黑"/>
				<mx:Button label="添加菜单"
						   click="addNode();" x="156" y="42" fontFamily="微软雅黑"/>
				<mx:Button label="删除节点"
						   click="removeNode();" x="19" y="80" fontFamily="微软雅黑"/>
				<mx:Button label="按钮" click="button1_clickHandler(event)" x="265" y="77" fontFamily="微软雅黑"/>
				<s:Label x="10" y="10" text="添加菜单" fontFamily="微软雅黑"/>
				<s:TextInput x="19" y="112" text="新菜单名" id="newname" fontFamily="微软雅黑"/>
				<s:Button x="161" y="112" label="更改菜单名" click="button2_clickHandler(event)" fontFamily="微软雅黑"/>
			</s:BorderContainer>
			<s:BorderContainer x="259" y="388" width="373" height="102">
				<s:Label x="10" y="10" text="添加构件" fontFamily="微软雅黑"/>
				<s:TextInput x="20" y="34" enabled="false" id="ccomp" fontFamily="微软雅黑"/>
				<s:Button x="165" y="36" label="选取构件" click="button4_clickHandler(event)" fontFamily="微软雅黑"/>
				<s:Button x="251" y="36" label="添加" click="button5_clickHandler(event)" fontFamily="微软雅黑"/>
				<s:Label x="149" y="40" text="→"/>
				<s:Label x="237" y="40" text="→"/>
			</s:BorderContainer>
			<s:Button x="424" y="505" label="提交" click="button6_clickHandler(event)"  enabled="true" fontFamily="微软雅黑"/>
			<s:Button x="527" y="505" label="放弃" click="" fontFamily="微软雅黑"/>
		</s:NavigatorContent>
	</mx:TabNavigator>
</mx:Application>
