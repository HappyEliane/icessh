<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  backgroundColor="#FDFEFE" width="658" height="484" creationComplete="initData()"  xmlns:CheckBoxColum="Common.controls.CheckBoxColum.*" xmlns:util="util.*">
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			
		
			public var mainApp:icesuser = null;
			
			public var rolestate:int=0;
			public var role_id:String="";
			public function initData():void {
				
			
				
			//	var userid:String=roleid.text;
				
				//rolestate=arolestate.selectedIndex;

				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/icessh/ChangeUserServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.kind="queryuser";
				param.roleid=role_id;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Query_successhandler);		
				
			}
			
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object;       //JSON:2
			public function Query_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();  //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				
				
				var g2:Object=r.getItemAt(0);
				var g1:ArrayCollection=new ArrayCollection(g2 as Array);	
				
				
				
			
				grid1.initdata(g1,10);
			}
			
			
		
			import mx.managers.PopUpManager;
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				dispatchEvent(new Event("finish",false));
			//	PopUpManager.removePopUp(this);
				remove(this);
			}
			
			
			
			//基本信息保存修改
			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			
				var mstate:int=arolestate.selectedIndex;

				if( mstate!=rolestate)
				{
					
					rolestate=mstate;
					var httpservice:HTTPService=new HTTPService();
					httpservice.resultFormat="text";
					//httpservice.url="http://2.icessh.duapp.com/flexServlet";
					httpservice.url="http://localhost:8080/icessh/userroleModifyRoleServlet";
					httpservice.method="POST";
					httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
					var param:Object=new Object;
					param.kind="modify";
					param.roleid=roleid.text;
					param.state=arolestate.selectedIndex+1;
					httpservice.send(param);
					httpservice.addEventListener(ResultEvent.RESULT,Modify_roleInfo_successhandler);		
				}
			}
			
			private function Modify_roleInfo_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
					Alert.show("更新成功","提示");
				else
					Alert.show("更新失败","提示");
			}
			protected function button5_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				
				arolestate.selectedIndex=rolestate;
				
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			public  function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var userroleid:String=grid1.cudg.selectedItem.userrole;
				//Alert.show("选择了"+userid,"提示");
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/icessh/ModifyUserRoleServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.roleKind="del";
				param.userroleid=userroleid;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,DelUserRole_successhandler);				
				
			}
			private function DelUserRole_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re="ok")
				{
					Alert.show("操作成功","提示");
					initData();
				}
				else
					Alert.show("操作失败","提示");
			}
		]]>
	</fx:Script>
	<s:BorderContainer x="0" y="0" width="658" height="484" borderColor="#000000" borderWeight="2" fontFamily="微软雅黑">
	<s:Label x="257" y="10" text="角色详细信息" fontSize="18"/>
	
	<s:BorderContainer x="10" y="36" width="638" height="149">
		<s:BorderContainer x="0" y="0" width="637" height="28">
		
		<mx:Image x="0" y="0" width="635" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false" height="26"/>
		</s:BorderContainer>
		<s:Label y="46" text="角色ID：" fontSize="13" x="23"/>
		<s:TextArea y="41" height="23" width="92" editable="false" enabled="false" x="81" id="roleid"/>
		
		<s:Label x="10" y="8" text="基本信息" fontSize="13"/>
		<s:Label y="48" text="角色名：" fontSize="13" x="257"/>
		<s:TextArea y="43" height="23" width="128" editable="false" enabled="false" x="314" id="rolename"/>
		<s:Label x="23" y="81" text="创建者用户名：" fontSize="13"/>
		<s:TextInput x="120" y="77" enabled="false" id="amakeperson"/>
		<s:Label x="246" y="116" text="创建日期：" fontSize="13"/>
		<s:TextInput x="314" y="111" enabled="false" id="amakedate"/>
		<s:Label x="10" y="116" text="当前状态：" fontSize="13"/>
		<s:DropDownList x="81" y="111" width="128" id="arolestate">
			<mx:ArrayCollection> 
				<fx:Object label="启用" data="0"/> 
				<fx:Object label="禁用" data="1"/> 		
			</mx:ArrayCollection> 
		</s:DropDownList>
		<s:Button x="477" y="116" label="保存修改" click="button4_clickHandler(event)"/>
		<s:Button x="556" y="116" label="放弃修改" click="button5_clickHandler(event)"/>
		<s:Label x="257" y="82" text="创建者角色名："/>
		<s:TextInput x="344" y="77" enabled="false" id="makerole"/>
		
		
		
	</s:BorderContainer>
	<s:Button x="578" y="10" label="关闭" click="button3_clickHandler(event)"/>
		<s:BorderContainer x="10" y="199" width="638" height="262">
	<util:CustomDataGridUnscroll x="0" y="29" height="232" width="636"  enabled="true" id="grid1">
		<util:mygridcolumns>
			<mx:DataGridColumn headerText="序号" dataField="nid" width="40" editable="false" textAlign="center" visible="true" draggable="false"/>
			<mx:DataGridColumn headerText="" dataField="id" visible="false" id="usid" draggable="false" />
			<mx:DataGridColumn headerText="" dataField="userrole"  editable="false" textAlign="center" visible="false"/>
			<mx:DataGridColumn headerText="用户名" dataField="username" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>

			
			<mx:DataGridColumn headerText="创建日期" dataField="makedate"  editable="false" textAlign="center" draggable="false" itemRenderer="mx.controls.Label"/>
			
			<mx:DataGridColumn headerText="状态" dataField="userstate"  editable="false" textAlign="center" draggable="false" itemRenderer="mx.controls.Label"/>
			<mx:DataGridColumn headerText="删除"  textAlign="center" editable="false" draggable="false">
			<mx:itemRenderer>
				<fx:Component>
					<mx:Button label="删除" click="outerDocument.button2_clickHandler(event)">
						
					</mx:Button>
					
				</fx:Component>
			</mx:itemRenderer>
			</mx:DataGridColumn>
		</util:mygridcolumns>
		</util:CustomDataGridUnscroll>
	<s:BorderContainer x="-1" y="-1" width="637" height="28">
		<mx:Image x="0" y="0" width="636" height="26" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false" />
		<s:Label x="10" y="7" text="关联的用户" fontSize="13"/>
	</s:BorderContainer>
	
	</s:BorderContainer>
	
	</s:BorderContainer>
</s:Application>
