<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  backgroundColor="#FDFEFE" width="624" height="548" creationComplete="initData()" xmlns:CheckBoxColum="Common.controls.CheckBoxColum.*" xmlns:util="util.*">

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
		
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import Common.controls.CheckBoxColum.CheckBoxHeaderRenderer;
			import Common.controls.CheckBoxColum.CheckBoxItemRenderer;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			
		
			
			public var mainApp:icesuser = null;
			
			public var Login_user:String="liu";
			public var Login_role:String="";
			
			public function initData():void {
				
				//Alert.show("11111111");
				query1();
				query2();
				
			}
			
			
			//查询用户
			public function query1():void{
				//	Alert.show("1111");
				
				var s1:String="null,null,null";
				var kind:String="";
				
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/icessh/ChangeUserServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.kind="query";
				param.makeuser=Login_user;
				param.makerole=Login_role;
				param.username="";
				param.sd="";
				param.ed="";
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Query_users_successhandler);	
				
			}
			//JSON方法传输数组数据,方法如下7步，缺一不可
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object;                                       //JSON:2
			
			private function Query_users_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();                        //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				
				var g2:Object=r.getItemAt(0);
				var g1:ArrayCollection=new ArrayCollection(g2 as Array);	
				//	Alert.show(re);
				
		
					grid1.initdata(g1,6);
			}
			
			//查询角色
			public function query2():void{
				
			
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/icessh/userroleModifyRoleServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.kind="role";
				param.user=Login_user;
				param.role=Login_role;
				param.rolename="";
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Query_Role_successhandler);		
			}
			private function Query_Role_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();                        //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
			
				var g2:Object=r.getItemAt(0);
				var g1:ArrayCollection=new ArrayCollection(g2 as Array);	
			
				
					
			
					grid2.initdata(g1,6);
			
			}
			

			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				var initDG1:ArrayCollection=new ArrayCollection();
				initDG1=grid1.cudg.dataProvider as ArrayCollection;
				var allRows:int =initDG1.length;
			//	Alert.show(""+allRows,"tishi");
				var user:String="";
				for(var i:int=0;i<allRows;i++)
				{
					if(initDG1[i].selected==true)
					{
						user=initDG1.getItemAt(i).id;
					
					}
				}
				if(user=="")
				{
					Alert.show("请选择用户！","提示");
				}
				else
				{
					var role:String="";
					var initDG3:ArrayCollection=new ArrayCollection();
					initDG3=grid2.cudg.dataProvider as ArrayCollection;
					var Rows:int = initDG3.length;
					for(var i:int=0;i<Rows;i++)
					{
						if(initDG3[i].selected==true)
						{
							role=initDG3.getItemAt(i).cloudroleid;
							
						}
					}
					if(role=="")
					{
						Alert.show("请选择角色！","提示");
					}
					else
					{
						//Alert.show(user+"  "+role,"提示");
						var httpservice:HTTPService=new HTTPService();
						httpservice.resultFormat="text";
						//httpservice.url="http://2.icessh.duapp.com/flexServlet";
						httpservice.url="http://localhost:8080/icessh/ModifyUserRoleServlet";
						httpservice.method="POST";
						httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
						var param:Object=new Object;
						param.roleKind="add";
						param.userid=user;
						param.roleid=role;
						param.makeuser=Login_user;
						param.makerole=Login_role;
						httpservice.send(param);
						httpservice.addEventListener(ResultEvent.RESULT,AddUserRole_successhandler);	 
					}
				}
			}
			private function AddUserRole_successhandler(event:ResultEvent):void
			{
				var result:String=event.result.toString();
				if(result=="do")
				{
					Alert.show("该用户和角色已经关联！","提示");
				}
				if(result=="ok")
				{
					Alert.show("关联成功！","提示");
					dispatchEvent(new Event("finish",false));
					PopUpManager.removePopUp(this);
				}
				if(result=="wrong")
				{
					dispatchEvent(new Event("finish",false));
					Alert.show("操作失败！","提示");
				}
			}


			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			//	PopUpManager.removePopUp(this);
				remove(this);
			}

		]]>
	</fx:Script>
	<s:BorderContainer x="0" y="0" width="625" height="548" borderColor="#000000" borderWeight="2" fontFamily="微软雅黑">
		
	<util:CustomDataGridUnscroll x="23" y="86" height="186" width="588"  enabled="true" id="grid1">
		<util:mygridcolumns>
			
		
			<mx:DataGridColumn dataField="selected" sortable="false"  itemRenderer="mx.controls.CheckBox" rendererIsEditor="true" editorDataField="selected" headerText="选择" width="40"  textAlign="center"/>
			<mx:DataGridColumn headerText="序号" dataField="nid" width="40" editable="false" textAlign="center" visible="true"/>
			<mx:DataGridColumn headerText="" dataField="id" visible="false" id="usid"/>
			<mx:DataGridColumn headerText="用户名" dataField="username" textAlign="center" editable="false" itemRenderer="mx.controls.Label"/>
			
			<mx:DataGridColumn headerText="创建日期" dataField="makedate"  editable="false" textAlign="center" itemRenderer="mx.controls.Label"/>
			<mx:DataGridColumn headerText="状态" dataField="userstate"  editable="false" textAlign="center" itemRenderer="mx.controls.Label"/>
			
		</util:mygridcolumns>
		</util:CustomDataGridUnscroll>
	<s:BorderContainer x="0" y="41" width="621" height="30">
		<mx:Image x="0" y="0" width="619" height="28" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false"/>
		<s:Label x="10" y="6" text="1.选择关联用户"/>
	</s:BorderContainer>
	<s:BorderContainer x="0" y="280" width="621" height="30">
	<mx:Image x="0" y="0" width="619" height="28" source="assets/back01.jpg" scaleContent="true" maintainAspectRatio="false"/>
	<s:Label x="10" y="10" text="2.选择关联角色"/>
	</s:BorderContainer>
		
	<util:CustomDataGridUnscroll x="19" y="318" height="178" width="592"  enabled="true" id="grid2">
		<util:mygridcolumns>
			
		
			<mx:DataGridColumn dataField="selected" sortable="false"  itemRenderer="mx.controls.CheckBox" rendererIsEditor="true" editorDataField="selected" headerText="选择" width="40"  textAlign="center"/>
			<mx:DataGridColumn headerText="序号" dataField="nid" width="40" editable="false" textAlign="center" visible="true"/>
			<mx:DataGridColumn headerText="" dataField="cloudroleid" visible="false"/>
			
			<mx:DataGridColumn headerText="角色名" dataField="rolename" textAlign="center" editable="false" draggable="false"  itemRenderer="mx.controls.Label"/>
			<mx:DataGridColumn headerText="角色类型" dataField="roleid" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>
			
			<mx:DataGridColumn headerText="创建日期" dataField="update" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>
			<mx:DataGridColumn headerText="当前状态" dataField="state" textAlign="center" editable="false" draggable="false" itemRenderer="mx.controls.Label"/>
	
		</util:mygridcolumns>
		</util:CustomDataGridUnscroll>
	<s:Label x="186" y="10" text="用户-角色关联" fontSize="18" fontWeight="bold"/>
	<s:Button x="229" y="513" label="确定关联" click="button1_clickHandler(event)"/>
	<s:Button x="331" y="513" label="取消返回" click="button2_clickHandler(event)"/>
	
	</s:BorderContainer>
</s:Application>
