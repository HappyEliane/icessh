<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute"  backgroundColor="#FDFEFE" width="658" height="492"  horizontalAlign="left" creationComplete="initData()" xmlns:util="util.*">
	
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	<fx:Script>
	  
		<![CDATA[
			import mx.collections.*;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			import spark.events.TextOperationEvent;
			//import clouduser;
			var Login_user:String="liu";//由父窗口设置
			
			var Login_role:String="superadmin";
			
			
			public var mainApp:icesuser = null;
			
			public function initData():void {
				
				
				
				
			//	initDG.removeAll();
				var s1:String="";					
				
					s1=queryrolename.text;
				
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				//httpservice.url="http://2.icessh.duapp.com/flexServlet";
				httpservice.url="http://localhost:8080/icessh/userroleModifyRoleServlet";
				httpservice.method="POST";
				httpservice.resultFormat=HTTPService.RESULT_FORMAT_ARRAY;
				var param:Object=new Object;
				param.kind="role";
				param.user=Login_user;
				param.role=Login_role;
				param.rolename=s1;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,Query_successhandler);		
				
				
			}
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object;       //JSON:2
			public function Query_successhandler(event:ResultEvent):void
			{
				var re:String=event.result.toString();  //JSON:3
				jsonObj=JSON.decode(re);   //解码                                   //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				
				
					var g2:Object=r.getItemAt(0);
					var g1:ArrayCollection=new ArrayCollection(g2 as Array);	
					grid.initdata(g1,10);//分页
					if(g1.length==0)
						Alert.show("没有查到所需角色！","提示");
			}
			
			
			private function goback():void{
				
			//	PopUpManager.removePopUp(this);
				remove(this);
			}
			
			
			//保存并关闭		
			private function saveAndclose():void
			{
				
				saveandcontinue();
				
			//	PopUpManager.removePopUp(this);
				remove(this);
				
			}
			//保存并继续 	
			private var checkpass:Boolean=false;
			private var checkname:Boolean=false;
			private function saveandcontinue():void
			{
				var initDG:ArrayCollection=new ArrayCollection();
				initDG=grid.cudg.dataProvider as ArrayCollection;
				var name:String=username.text;//用户名
				var pass:String=password.text;//用户密码
				var allRows:int = initDG.length;
				var userroleid:String="";//用户-角色表主键
				var userrolename:String="";
				var userrole:String="";
				for(var i:int=0;i<allRows;i++)
				{
					if(initDG[i].selected==true)
					{
						userroleid=initDG.getItemAt(i).cloudroleid;
						userrolename=initDG.getItemAt(i).rolename;
						userrole=initDG.getItemAt(i).roleid;
						Alert.show(initDG.getItemAt(i).cloudroleid,"提示");
					}
				}
				if(checkpass && checkname)
				{
					
					var httpservice:HTTPService=new HTTPService();
					httpservice.resultFormat="text";
					
					httpservice.url="http://localhost:8080/icessh/ChangeUserServlet";
					httpservice.method="POST";
					var param:Object=new Object;
					param.kind="add";
					param.username=username.text;
					param.userpass=password.text;
					param.makeid=Login_user;
					param.makerole=Login_role;
					param.roleid=userroleid;
					param.rolename=userrolename;
					param.roletype=userrole;
					httpservice.send(param);
					httpservice.addEventListener(ResultEvent.RESULT,success_adduser_handler);
					
				}
				
				
				
			}
			private function success_adduser_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
				{
					Alert.show("用户注册成功！","提示");
					dispatchEvent(new Event("finish",false));
					username.text="";
					password.text="";
				}
				else
				{
					dispatchEvent(new Event("finish",false));
					Alert.show("用户注册失败，请稍后再试！","提示");
				}
			}
			

			protected function username_changingHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				username.setStyle("borderColor","black");
			}


			protected function password_changingHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				password.setStyle("borderColor","black");
			}


			protected function password_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				var cps:Boolean=check_pw();
				if(cps)
				{
					checkpass=true;
					ps_load_true.visible=true;
					ps_load_false.visible=false;	
				}
				else
				{
					checkpass=false;
					ps_load_false.visible=true;	
					ps_load_true.visible=false;
				}
			}
			//验证密码
			private function isValidPassword():Boolean  
			{  
				var str:String=password.text;
				if(str.length !=6)  
					return false;  
				var regexArray:RegExp =/^[a-zA-Z]\w{5,17}$/;  
				
				var result:Object;  
				
				result = RegExp(regexArray).exec(str);  
				if(!result)  
				{  
					return false;  
				}  
				
				return true;  
			}  
			private function check_pw():Boolean
			{
				var result:Boolean=true;
				if(password.text=="" || password.text==null)
				{
					result=false;
					password.setStyle("borderColor","red");
				}
				if(!isValidPassword())
				{
					result=false;		
					password.setStyle("borderColor","red");
				}
				return result;
			}
			


			protected function username_changeHandler(event:TextOperationEvent):void
			{
				// TODO Auto-generated method stub
				load.visible=true;
				var uid:String=username.text;
				if(uid!="")
				{
					var httpservice:HTTPService=new HTTPService();
					httpservice.resultFormat="text";
					
					httpservice.url="http://localhost:8080/icessh/useridCheckServlet";
					httpservice.method="POST";
					var param:Object=new Object;
					param.id=uid;
					httpservice.send(param);
					httpservice.addEventListener(ResultEvent.RESULT,success_checkid_handler);
				}
				else
				{
					checkname=false;
					load.visible=false;
					load_true.visible=false;
					load_false.visible=false;
				}
			}
			private function success_checkid_handler(event:ResultEvent):void
			{
				var response:String=null;
				response=event.message.body.toString();
				load.visible=false;
				if(response=="ok")
				{
					checkname=true;
					load_false.visible=false;
					load_true.visible=true;
				
				}
				else
				{
					checkname=false;
					load_true.visible=false;
					load_false.visible=true;
					
				}
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				initData();
			}

		]]></fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	
	
	</fx:Declarations>
	<s:BorderContainer x="0" y="0" width="658" height="492" borderColor="#000000" borderWeight="2" fontFamily="微软雅黑">
	<mx:Label x="182" y="96" text="用户名" fontSize="13"/>
	<mx:Label x="192" y="130" text="密码" fontSize="13"/>
	<mx:SWFLoader  x="378" y="95" width="20" height="20" source="assets/loading.swf" visible="false" id="load"/>
	<s:Label  x="383" y="100" text="此用户名可用！" color="#05A905" id="load_true" visible="false"/>
	<s:Label  x="379" y="100" text="此用户名已被占用！" color="#BB0404" id="load_false" visible="false"/>
	<s:TextInput x="229" y="94" id="username" fontSize="13" changing="username_changingHandler(event)" change="username_changeHandler(event)"/>
	
	<s:Label  x="383" y="135" text="该密码可用！" color="#05A905" id="ps_load_true" visible="false"/>
	<s:Label  x="374" y="124" text="密码应该以字母开始，只能含有数字或字母，&#xd;位数为6位" color="#BB0404" id="ps_load_false" visible="false" height="27"/>
	<s:TextInput x="229" y="128" displayAsPassword="true" id="password" fontSize="13" changing="password_changingHandler(event)" change="password_changeHandler(event)"/>
	
	<util:CustomDataGridUnscroll  height="290" width="603" fontSize="13" id="grid"  x="26.5" y="190" enabled="true">
		<util:mygridcolumns>
			
	
			<mx:DataGridColumn dataField="selected" sortable="false"  itemRenderer="mx.controls.CheckBox" rendererIsEditor="true" editorDataField="selected" headerText="选择" width="40"  textAlign="center"/>
			<mx:DataGridColumn headerText="序号" dataField="nid" width="40" editable="false" textAlign="center" visible="true" draggable="false"/>
			<mx:DataGridColumn headerText="" dataField="cloudroleid" visible="false"/>
			<mx:DataGridColumn headerText="角色名" dataField="rolename" textAlign="center" editable="false" draggable="false"/>
			<mx:DataGridColumn headerText="角色类型" dataField="roleid" textAlign="center" editable="false" draggable="false"/>
			
			
			<mx:DataGridColumn headerText="创建日期" dataField="update" textAlign="center" editable="false" draggable="false"/>
			<mx:DataGridColumn headerText="当前状态" dataField="state" textAlign="center" editable="false" draggable="false"/>		
		</util:mygridcolumns>
		</util:CustomDataGridUnscroll>
	<mx:Button label="保存并继续" fontSize="12" height="29" x="490" y="31" click="saveandcontinue()"/>
	<mx:Button label="保存并关闭" fontSize="12" height="28" x="401" y="32" click="saveAndclose()" fontWeight="bold"/>
	<mx:Button label="关闭" fontSize="12" height="28" click="goback()" x="571" y="32"/>
	<mx:Label x="264" y="10" text="创建新用户" fontSize="25" fontWeight="bold"/>
	<mx:HRule x="11" y="159" width="638"/>
	<s:Label x="10" y="98" text="1.设置用户名和密码" color="#048295"/>
	<s:Label x="11" y="165" text="2.选择用户角色" color="#048295"/>
	<s:TextInput x="322" y="165" id="queryrolename"/>
	<s:Label x="276" y="170" text="角色名"/>
	<s:Button x="477" y="166" label="查找" click="button1_clickHandler(event)"/>
	<s:Label x="102" y="165" text="(可选)" color="#FF0000"/>
	<mx:HRule x="10" y="71" width="638"/>
	
	</s:BorderContainer>
	
	
</mx:Application>


