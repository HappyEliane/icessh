<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"  layout="absolute" showCloseButton="true" close="titlewindow1_closeHandler(event)" creationComplete="titlewindow1_creationCompleteHandler(event)" width="687" height="602" title="服务资源选取" fontFamily="微软雅黑" fontSize="14">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.DisplayObject;
			
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
			
			
			
			
			

		

		]]>
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import org.osmf.layout.AbsoluteLayoutFacet;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.controls.Alert;
			

			public var mainApp:homesp;
			public var invokeid:String="";
			public var rname:String="";
			
			public var invokeinput:String="";
			public var invokeoutput:String="";
			[Bindable]
			var inputData:ArrayCollection=new ArrayCollection();
			[Bindable]
			var outputData:ArrayCollection=new ArrayCollection();
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				// TODO Auto-generated method stub
				remove(this);
			}


			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var spin:String=invokeinput;
				var spout:String=invokeoutput;
				//	Alert.show("input:"+spin+"\routput："+spout);
				var spin1:Array=spin.split(',');
				var spout1:Array=spout.split(',');
				
				var input:ArrayCollection=new ArrayCollection();
				for(var i:int=0;i<spin1.length-1;i++)
				{
					var o:Object=new Object();
					var tem:Array=spin1[i].split(':');
					o.vname=tem[0];
					o.vdes=tem[2];
					o.sname="";
					o.sdes="";
					input.addItem(o);
				}
				//	spinput1.dataProvider=te1;
				inputData=input;
				inputpara.dataProvider=input;
					var output:ArrayCollection=new ArrayCollection();
				for(var i:int=0;i<spout1.length-1;i++)
				{
					var o:Object=new Object();
					var tem:Array=spout1[i].split(':');
					o.vname=tem[0];
					o.vdes=tem[2];
					o.sname="";
					o.sdes="";
					output.addItem(o);
				}
				outputData=output;
				outputpara.dataProvider=output;
				
				
				resourcename.text=rname;
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				httpservice.url="http://localhost:8080/NewServicePatternDesigner/flexServlet";
				httpservice.method="POST";
				var param:Object=new Object;
				param.kind="queryResource";
				param.invoke=invokeid;
				
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_queryResource_handler);
				
			}
			[Bindable]
			var allServices:ArrayCollection=new ArrayCollection();
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object; 
			private function success_queryResource_handler(result:ResultEvent):void
			{
				var re:String=result.result.toString();                        //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5
			//	totalServices=r.length;
				allServices=r;
			//	sp.dataProvider=r;
				
			}
			public function check_clickHandler(event:MouseEvent):void
			{
				
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var temp:ArrayCollection=new ArrayCollection();
				temp=resource.dataProvider as ArrayCollection;
				var cid:String="-1";
				var cname:String="";
				/*
				for(var i:int=0;i<temp.length;i++)
				{
					if(temp.getItemAt(i).selected==true)
					{
						cid=temp.getItemAt(i).id;
						cname=temp.getItemAt(i).name;
						break;
					}
				}
				*/
				cid=resource.selectedItem.id;
				cname=resource.selectedItem.name;
				var url:String=resource.selectedItem.url;
				if(cid=="-1")
				{
					Alert.show("您尚未选择资源！");
				}
				else
				{
					
					var allpara:ArrayCollection=new ArrayCollection();
					var allinputpara:ArrayCollection=inputpara.dataProvider as ArrayCollection;
					var alloutputpara:ArrayCollection=outputpara.dataProvider as ArrayCollection;
					
					for(var i:int=0;i<allinputpara.length;i++)
					{
						var o:Object=new Object();
						o.v=rname;
						o.vname=rname+allinputpara.getItemAt(i).vname;
						o.sname=allinputpara.getItemAt(i).sname;
						allpara.addItem(o);
					}
					for(var i:int=0;i<alloutputpara.length;i++)
					{
						var o:Object=new Object();
						o.v=rname;
						o.vname=rname+alloutputpara.getItemAt(i).vname;
						o.sname=alloutputpara.getItemAt(i).sname;
						allpara.addItem(o);
					}
					mainApp.invokeResourcePara=allpara;

					mainApp.rid=cid;
					mainApp.rname=cname;
					mainApp.urll=url;
					mainApp.rtitle=resource.selectedItem.title;
					dispatchEvent(new Event("finish",false));
					remove(this);
				}
			}
			var selectedResource:Object=new Object();
			protected function resource_itemClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				selectedResource=resource.selectedItem;
				selectRe.text=selectedResource.id;
			}
			var inorout:String="";
			public var choosedParaname:String="";
			public var choosedParades:String=""; 
			public var cindex:int=-1;
			private var cvname:String="";
			private var cvdes:String="";
		//	private var csname:String="";
		//	private var csdes:String="";
			
			public function choose_input_clickHandler(event:MouseEvent):void
			{
				if(selectedResource==null)
				{
					Alert.show("请先选择资源！");
				}
				else
				{
					
					cindex=inputpara.selectedIndex;
					cvname=inputpara.selectedItem.vname;
					cvdes=inputpara.selectedItem.vdes;
					
					
					var g:Object=selectedResource.oper;
					var para1:ArrayCollection=new ArrayCollection(g as Array);
					var te1:ArrayCollection=new ArrayCollection();
					var reinput:String="";
					var reoutput:String="";
					
					reinput=para1.getItemAt(0).input;
					reoutput=para1.getItemAt(0).output;
					
					
					inorout="input";
					var editWin:choosePara =new  choosePara();
					editWin.mainApp = this;	
					editWin.resourcename=selectedResource.name;
					editWin.parameter=reinput;
					
					editWin.addEventListener("finish",Finish);
					show(editWin,this,false);
					
					
				}
			}
			public function choose_clickHandler(event:MouseEvent):void
			{
				if(selectedResource==null)
				{
					Alert.show("请先选择资源！");
				}
				else
				{
					cindex=outputpara.selectedIndex;
					cvname=outputpara.selectedItem.vname;
					cvdes=outputpara.selectedItem.vdes;
					
					var g:Object=selectedResource.oper;
					var para1:ArrayCollection=new ArrayCollection(g as Array);
					var te1:ArrayCollection=new ArrayCollection();
					var reinput:String="";
					var reoutput:String="";
					
					reinput=para1.getItemAt(0).input;
					reoutput=para1.getItemAt(0).output;
					
					
					inorout="output";
					var editWin:choosePara =new  choosePara();
					editWin.mainApp = this;	
					editWin.resourcename=selectedResource.name;
					editWin.parameter=reoutput;
					
					editWin.addEventListener("finish",Finish);
					show(editWin,this,false);
					
					
				}
			}
			public function Finish(event:Event):void
			{
				if(inorout=="input")
				{
					var data:ArrayCollection=inputpara.dataProvider as ArrayCollection;
					data.removeItemAt(cindex);
					var o:Object=new Object();
					o.vname=cvname;
					o.vdes=cvdes;
					o.sname=choosedParaname;
					o.sdes=choosedParades;
					data.addItem(o);
					inputpara.dataProvider=data;
					
				}
				else if(inorout=="output")
				{
					var data:ArrayCollection=outputpara.dataProvider as ArrayCollection;
					data.removeItemAt(cindex);
					var o:Object=new Object();
					o.vname=cvname;
					o.vdes=cvdes;
					o.sname=choosedParaname;
					o.sdes=choosedParades;
					data.addItem(o);
					outputpara.dataProvider=data;
				}
			}

		]]>
	</fx:Script>
	<s:Label x="23" y="26" text="活动名称："/>
	<s:TextInput x="101" y="19" height="30" width="215" id="resourcename"/>
	<mx:DataGrid x="23" y="86" width="639" height="181" id="resource" dataProvider="{allServices}" itemClick="resource_itemClickHandler(event)">
		<mx:columns>
		<!--	<mx:DataGridColumn dataField="selected" sortable="false"  itemRenderer="mx.controls.CheckBox" rendererIsEditor="true" editorDataField="selected" headerText="选择" width="40"  textAlign="center"/>-->
			<mx:DataGridColumn headerText="资源编号" dataField="id" textAlign="center" draggable="false" editable="false"/>
			<mx:DataGridColumn headerText="资源名称" dataField="name" textAlign="center" draggable="false" editable="false"/>
			<mx:DataGridColumn headerText="资源描述" dataField="des" textAlign="center" draggable="false" editable="false"/>
			<mx:DataGridColumn headerText="查看" dataField="col3" editable="false" draggable="false" textAlign="center">
				<mx:itemRenderer>
					<fx:Component>
						<mx:LinkButton label="查看" click="outerDocument.check_clickHandler(event)" useHandCursor="true" buttonMode="true">	
						</mx:LinkButton>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<s:Label x="23" y="64" text="选取服务资源："/>
	<s:Button x="481" y="529" label="确定" click="button1_clickHandler(event)"/>
	<s:Button x="592" y="529" label="取消"/>
	<s:Label x="23" y="287" text="已选取的资源："/>
	<s:TextInput x="129" y="280" width="230" height="30" enabled="false" id="selectRe"/>
	<mx:DataGrid x="23" y="337" width="293" height="184" id="inputpara" dataProvider="{inputData}">
		<mx:columns>
			<mx:DataGridColumn headerText="变量名(活动)" dataField="vname" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="描述(活动)" dataField="vdes" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="变量名(资源)" dataField="sname" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="描述(资源)" dataField="sdes" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="选择" dataField="col3" editable="false" draggable="false" textAlign="center">
				<mx:itemRenderer>
					<fx:Component>
						<mx:LinkButton label="选择" click="outerDocument.choose_input_clickHandler(event)" useHandCursor="true" buttonMode="true">	
						</mx:LinkButton>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<s:Label x="23" y="317" text="活动-资源参数映射："/>
	<mx:DataGrid x="338" y="337" width="324" height="185" id="outputpara" dataProvider="{outputData}">
		<mx:columns>
			<mx:DataGridColumn headerText="变量名(活动)" dataField="vname" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="描述(活动)" dataField="vdes" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="变量名(资源)" dataField="sname" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="描述(资源)" dataField="sdes" editable="false" draggable="false" textAlign="center"/>
			<mx:DataGridColumn headerText="选择" dataField="col3" editable="false" draggable="false" textAlign="center">
				<mx:itemRenderer>
					<fx:Component>
						<mx:LinkButton label="选择" click="outerDocument.choose_clickHandler(event)" useHandCursor="true" buttonMode="true">	
						</mx:LinkButton>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
</mx:TitleWindow>
