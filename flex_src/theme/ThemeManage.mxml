<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" xmlns:util="util.*" width="699" height="586">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[ 
			import flash.display.DisplayObject;
			
			import mx.core.IFlexDisplayObject;
			import mx.effects.Blur;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.TweenEvent;
			import mx.managers.PopUpManager;
			import mx.events.FlexEvent;
			
			private var insertWindow:Object;
			private var detailWindow:Object;
			private var modifyWindow:Object;
			private var editWin:Object;
			
			private var Login_userName:String="liu";
			
			public static function show(control:IFlexDisplayObject,parent:DisplayObject,modal:Boolean):void{
				var parallel:Parallel=new Parallel();
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=0.2;
				zoom.zoomWidthFrom=0.2;
				zoom.zoomHeightTo=1;
				zoom.zoomWidthTo=1;
				var mShowEffect:Blur=new Blur();
				mShowEffect.blurXFrom=255;
				mShowEffect.blurYFrom=255;
				mShowEffect.blurXTo=0;
				mShowEffect.blurYTo=0;
				parallel.duration=500;
				parallel.target=control;
				parallel.addChild(mShowEffect);
				parallel.addChild(zoom);
				PopUpManager.addPopUp(control,parent,modal);
				PopUpManager.centerPopUp(control);
				parallel.play();
			}
			/*关闭隐藏特效  */
			public static function remove(control:IFlexDisplayObject):void
			{
				var parallel:Parallel=new Parallel();
				var mHideEffect:Blur=new Blur();
				mHideEffect.blurXFrom=0;
				mHideEffect.blurYFrom=0;
				mHideEffect.blurXTo=255;
				mHideEffect.blurYTo=255;
				var zoom:Zoom=new  Zoom();
				zoom.zoomHeightFrom=1;
				zoom.zoomWidthFrom=1;
				zoom.zoomHeightTo=0;
				zoom.zoomWidthTo=0;
				parallel.addChild(mHideEffect);
				parallel.addChild(zoom);
				//PopUpManager.removePopUp(control);
				mHideEffect.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				zoom.addEventListener(TweenEvent.TWEEN_END,function():void{
					PopUpManager.removePopUp(control);
				});
				parallel.duration=500;
				parallel.target=control;
				parallel.play();
			}
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.mx_internal;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.collections.ArrayCollection;  
			import mx.core.IFlexDisplayObject;
			import spark.events.TextOperationEvent;
			import flash.display.DisplayObject;
			private function readCookie():void
			{
				var test2:SharedObject=SharedObject.getLocal("userLogin","/");
				if(test2.size)
				{
					var name:String=test2.data.name;
					var org:String=test2.data.org;
					var role:String=test2.data.role;
					
					Login_userName=name;
					//	Login_roleid=role;
					
					
				}
				else 
				{
					navigateToURL(new URLRequest("http://localhost:8080/icessh/ICESSHSC.html"),"self");
				}
				
			}
			
			protected function con_query_clickHandler(event:MouseEvent):void{
				query_theme();
			}
			private function query_theme():void
			{
				var themeid:String=themeid.text;
				var themename:String=themename.text;
				
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/serviceThemeServlet";
				httpservice.method="POST";
				var param:Object=new Object;  
				param.kind="query";
				param.servicethemeID=themeid;
				param.servicethemeName=themename;
				
				//param.username=Login_userName;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_query_handler);
			}
			import com.adobe.serialization.json.JSON;						  //JSON:1
			[Bindable]
			private var jsonObj:Object; 
			private function success_query_handler(event:ResultEvent):void
			{
				//JSON:2
				
				var re:String=event.result.toString();                        //JSON:3
				jsonObj=JSON.decode(re);                                      //JSON:4
				var r:ArrayCollection=new ArrayCollection(jsonObj as Array);  //JSON:5	
				//JSON:7
				
				//	Alert.show(re);
				huserdg.initdata(r,10);
				if(r.length==0)
				{
					Alert.show("没有符合条件的主题！","提示");
				}
				/*
				ff = r;
				gridpara = grid1;
				initGrid(ff);
				sum.text=ff.length.toString();
				*/
			}
			
			protected function clear_clickHandler(event:MouseEvent):void
			{
				themeid.text = "";
				themename.text = "";
			}
			
			protected function insert_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				insertWindow=PopUpManager.createPopUp(this,ThemeDetail,true);
				PopUpManager.centerPopUp(insertWindow as IFlexDisplayObject);
			}
			
			public function check_clickHandler(event:MouseEvent):void
			{
				editWin=PopUpManager.createPopUp(this,EditTheme,true);
				editWin.themeid.text=huserdg.cudg.selectedItem.servicethemeID;
				editWin.themename.text=huserdg.cudg.selectedItem.servicethemeName;
				editWin.themedes.text=huserdg.cudg.selectedItem.servicethemeDes;
				PopUpManager.centerPopUp(editWin as IFlexDisplayObject);
				//editWin.addEventListener("editHome",modifySaveResp);
				
				editWin.mainApp = this;	
				//editWin.initData();
				//	editWin.addEventListener("finish",AddRoleFinish);
				//	PopUpManager.centerPopUp(editWin);	
			}
			
			private function edit_success_handler(event:ResultEvent):void
			{
				var result:String=event.result.toString();
				if(result)
					Alert.show("操作成功！","提示");
				else
					Alert.show("操作失败！","提示");
			}
			
			public function del_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("您确定删除该主题么？","提示",3,this,deleteCallBack);
			}
			private function deleteCallBack(event:CloseEvent):void
			{
				if(event.detail==Alert.YES)
				{
					del_theme();
				}
			}
			private function del_theme():void
			{
				var themeid:String = huserdg.cudg.selectedItem.servicethemeID;
				var httpservice:HTTPService=new HTTPService();
				httpservice.resultFormat="text";
				
				httpservice.url="http://localhost:8080/icessh/serviceThemeServlet";
				httpservice.method="POST";
				var param:Object=new Object;  
				param.kind="del";
				param.themeid=themeid;
				//param.username=Login_userName;
				httpservice.send(param);
				httpservice.addEventListener(ResultEvent.RESULT,success_del_handler);
			}
			private function success_del_handler(event:ResultEvent):void
			{
				var re:String=event.result.toString();
				if(re=="ok")
				{
					//Alert.show("操作成功！","提示");
					query_theme();
				}
				else
				{
					Alert.show("操作失败！","提示");
				}
			}
		]]>
	</fx:Script>
	<mx:Panel x="0" y="0" width="700" height="100%" layout="absolute" title="主题信息" fontSize="14"  borderColor="#869CA7" color="#FFFFFF">
		<util:CustomDataGridUnscroll x="0" y="87" height="100%" id="huserdg" width="688" color="#000000">
			<util:mygridcolumns>
				<mx:DataGridColumn headerText="主题编号" dataField="servicethemeID" editable="false"/>
				<mx:DataGridColumn headerText="主题名称" dataField="servicethemeName" editable="false"/>
				<mx:DataGridColumn headerText="描述" dataField="servicethemeDes" editable="false"/>
				<mx:DataGridColumn headerText="查看" draggable="false" textAlign="center" editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Button label="查看" click="outerDocument.check_clickHandler(event)">								
							</mx:Button>				
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="删除"  draggable="false" textAlign="center" editable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:Button label="删除" click="outerDocument.del_clickHandler(event)">	
							</mx:Button>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</util:mygridcolumns>
		</util:CustomDataGridUnscroll>
		<mx:HBox x="0" y="0" width="100%" height="50" verticalAlign="middle" horizontalAlign="center" color="#000000">
			<mx:HBox horizontalAlign="center" verticalAlign="middle" height="31" width="100%">
				<mx:Label text="主题编号"/>
				<mx:TextInput id="themeid"/>
				<mx:Label text="名称"/>
				<mx:TextInput id="themename"/>
				<mx:Button label="查询" id="query" click="con_query_clickHandler(event)"/>
				<mx:Button label="清空" id="clear" click="clear_clickHandler(event)"/>
			</mx:HBox>
		</mx:HBox>
		<mx:HBox verticalAlign="middle" height="30" horizontalAlign="right" width="100%" x="0" y="49" color="#000000">
			<mx:Button label="新增" id="insert"  click="insert_clickHandler(event)"/>
			<!--			<mx:Button label="明细" id="detail" click="modify_clickHandler(event)"/>-->
			<!--			<mx:Button label="删除" id="delet" click="delet_clickHandler(event)"/>-->
			<mx:Label/>
		</mx:HBox>
	</mx:Panel>
</s:Application>
